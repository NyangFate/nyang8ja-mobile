/* tslint:disable */
/* eslint-disable */
/**
 * 냥팔자 API 명세
 * 냥파자는 상팔자 어플리케이션을 위한 API 명세서입니다. - 모든 API의 Path는 **\'/api\'로 시작**합니다. - 모든 API의 응답은 **공통 응답 형식**을 가집니다. data에 실제 응답 데이터가 들어갑니다.     ```json     {       \"requestId\": \"서버생성 요청ID\",       \"requestTime\": \"요청시간\",       \"success\": \"성공여부\",       \"data\": {         JSON 데이터       }     }     ```
 *
 * The version of the OpenAPI document: v1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DivinationQuestionListReqeustDto
 */
export interface DivinationQuestionListReqeustDto {
    /**
     * 
     * @type {string}
     * @memberof DivinationQuestionListReqeustDto
     */
    category?: DivinationQuestionListReqeustDtoCategoryEnum;
    /**
     * 
     * @type {number}
     * @memberof DivinationQuestionListReqeustDto
     */
    pageSize: number;
    /**
     * 
     * @type {number}
     * @memberof DivinationQuestionListReqeustDto
     */
    startQuestionId?: number;
    /**
     * 
     * @type {string}
     * @memberof DivinationQuestionListReqeustDto
     */
    type?: DivinationQuestionListReqeustDtoTypeEnum;
}

export function DivinationQuestionListReqeustDtoFromJSON(json: any): DivinationQuestionListReqeustDto {
    return DivinationQuestionListReqeustDtoFromJSONTyped(json, false);
}

export function DivinationQuestionListReqeustDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): DivinationQuestionListReqeustDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'category': !exists(json, 'category') ? undefined : json['category'],
        'pageSize': json['pageSize'],
        'startQuestionId': !exists(json, 'startQuestionId') ? undefined : json['startQuestionId'],
        'type': !exists(json, 'type') ? undefined : json['type'],
    };
}

export function DivinationQuestionListReqeustDtoToJSON(value?: DivinationQuestionListReqeustDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'category': value.category,
        'pageSize': value.pageSize,
        'startQuestionId': value.startQuestionId,
        'type': value.type,
    };
}

/**
* @export
* @enum {string}
*/
export enum DivinationQuestionListReqeustDtoCategoryEnum {
    SUMMARY = 'SUMMARY',
    LOVE = 'LOVE',
    WEALTH = 'WEALTH',
    CAREER = 'CAREER',
    HEALTH = 'HEALTH',
    ADVICE = 'ADVICE',
    NONE = 'NONE'
}
/**
* @export
* @enum {string}
*/
export enum DivinationQuestionListReqeustDtoTypeEnum {
    TAROT = 'TAROT',
    SAJU = 'SAJU',
    NONE = 'NONE'
}


