/* tslint:disable */
/* eslint-disable */
/**
 * 냥팔자 API 명세
 * 냥파자는 상팔자 어플리케이션을 위한 API 명세서입니다. - 모든 API의 Path는 **\'/api\'로 시작**합니다. - 모든 API의 응답은 **공통 응답 형식**을 가집니다. data에 실제 응답 데이터가 들어갑니다.     ```json     {       \"requestId\": \"서버생성 요청ID\",       \"requestTime\": \"요청시간\",       \"success\": \"성공여부\",       \"data\": {         JSON 데이터       }     }     ```
 *
 * The version of the OpenAPI document: v1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    SocialAccountResponseDto,
    SocialAccountResponseDtoFromJSON,
    SocialAccountResponseDtoFromJSONTyped,
    SocialAccountResponseDtoToJSON,
    UserProfileResponseDto,
    UserProfileResponseDtoFromJSON,
    UserProfileResponseDtoFromJSONTyped,
    UserProfileResponseDtoToJSON,
} from './';

/**
 * 
 * @export
 * @interface UserResponseDto
 */
export interface UserResponseDto {
    /**
     * 
     * @type {Date}
     * @memberof UserResponseDto
     */
    createdAt: Date;
    /**
     * 
     * @type {string}
     * @memberof UserResponseDto
     */
    name: string;
    /**
     * 
     * @type {UserProfileResponseDto}
     * @memberof UserResponseDto
     */
    profile: UserProfileResponseDto;
    /**
     * 
     * @type {Array<SocialAccountResponseDto>}
     * @memberof UserResponseDto
     */
    socialAccounts: Array<SocialAccountResponseDto>;
    /**
     * 
     * @type {string}
     * @memberof UserResponseDto
     */
    userKey: string;
    /**
     * 
     * @type {string}
     * @memberof UserResponseDto
     */
    userProfileStatus: UserResponseDtoUserProfileStatusEnum;
}

export function UserResponseDtoFromJSON(json: any): UserResponseDto {
    return UserResponseDtoFromJSONTyped(json, false);
}

export function UserResponseDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserResponseDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'createdAt': (new Date(json['createdAt'])),
        'name': json['name'],
        'profile': UserProfileResponseDtoFromJSON(json['profile']),
        'socialAccounts': ((json['socialAccounts'] as Array<any>).map(SocialAccountResponseDtoFromJSON)),
        'userKey': json['userKey'],
        'userProfileStatus': json['userProfileStatus'],
    };
}

export function UserResponseDtoToJSON(value?: UserResponseDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'createdAt': (value.createdAt.toISOString()),
        'name': value.name,
        'profile': UserProfileResponseDtoToJSON(value.profile),
        'socialAccounts': ((value.socialAccounts as Array<any>).map(SocialAccountResponseDtoToJSON)),
        'userKey': value.userKey,
        'userProfileStatus': value.userProfileStatus,
    };
}

/**
* @export
* @enum {string}
*/
export enum UserResponseDtoUserProfileStatusEnum {
    INACTIVE = 'INACTIVE',
    EMPTY = 'EMPTY',
    INCOMPLETE = 'INCOMPLETE',
    COMPLETE = 'COMPLETE'
}


