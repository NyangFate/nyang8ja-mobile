/* tslint:disable */
/* eslint-disable */
/**
 * 냥팔자 API 명세
 * 냥파자는 상팔자 어플리케이션을 위한 API 명세서입니다. - 모든 API의 Path는 **\'/api\'로 시작**합니다. - 모든 API의 응답은 **공통 응답 형식**을 가집니다. data에 실제 응답 데이터가 들어갑니다.     ```json     {       \"requestId\": \"서버생성 요청ID\",       \"requestTime\": \"요청시간\",       \"success\": \"성공여부\",       \"data\": {         JSON 데이터       }     }     ```
 *
 * The version of the OpenAPI document: v1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EventNotificationDto,
    EventNotificationDtoFromJSON,
    EventNotificationDtoFromJSONTyped,
    EventNotificationDtoToJSON,
    ServiceNotificationDto,
    ServiceNotificationDtoFromJSON,
    ServiceNotificationDtoFromJSONTyped,
    ServiceNotificationDtoToJSON,
} from './';

/**
 * 
 * @export
 * @interface UserNotificationUpdateRequestDto
 */
export interface UserNotificationUpdateRequestDto {
    /**
     * 
     * @type {EventNotificationDto}
     * @memberof UserNotificationUpdateRequestDto
     */
    event?: EventNotificationDto;
    /**
     * 
     * @type {ServiceNotificationDto}
     * @memberof UserNotificationUpdateRequestDto
     */
    service?: ServiceNotificationDto;
}

export function UserNotificationUpdateRequestDtoFromJSON(json: any): UserNotificationUpdateRequestDto {
    return UserNotificationUpdateRequestDtoFromJSONTyped(json, false);
}

export function UserNotificationUpdateRequestDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserNotificationUpdateRequestDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'event': !exists(json, 'event') ? undefined : EventNotificationDtoFromJSON(json['event']),
        'service': !exists(json, 'service') ? undefined : ServiceNotificationDtoFromJSON(json['service']),
    };
}

export function UserNotificationUpdateRequestDtoToJSON(value?: UserNotificationUpdateRequestDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'event': EventNotificationDtoToJSON(value.event),
        'service': ServiceNotificationDtoToJSON(value.service),
    };
}


